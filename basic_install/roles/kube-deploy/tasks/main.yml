---
# tasks file for kube-deploy
# Inspiration & based on: https://github.com/kairen/kubeadm-ansible 

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster

# kubeadm init --service-cidr {{ service_cidr }} \
#              --pod-network-cidr {{ pod_network_cidr }} \
#              --token {{ token }} 
- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: |
    kubeadm init --pod-network-cidr {{ pod_network_cidr }} \
                 --token {{ token }}
  register: init_cluster

- name: Make sure no old kube configs for root user exist
  file:
    path: "{{ root_user }}/.kube"
    state: absent

- name: Make sure no old kube configs for std user exist
  file:
    path: "{{ std_user }}/.kube/config"
    state: absent

- name: Create Kubernetes config directory
  file:
    path: /root/.kube/
    state: directory

- name: Check admin.conf file exists.
  stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_conf

- name: Copy admin.conf to root directory
  command: "cp /etc/kubernetes/admin.conf /{{ root_user }}/.kube/config"
  when: k8s_conf.stat.exists

- name: Copy admin.conf to home directory for standard user
  command: "cp /etc/kubernetes/admin.conf /home/{{ std_user }}/.kube/config"
  when: k8s_conf.stat.exists

- name: Copy config file to $HOME/.kube/config_raspi
  fetch:
    flat: yes
    src: /etc/kubernetes/admin.conf
    dest: "{{ lookup('env','HOME') }}/.kube/config_raspi"
    when: k8s_conf.stat.exists


- name: Tell kubernetes to look to the right auth key
  lineinfile: 
    path: /root/.profile
    line: export KUBECONFIG=/etc/kubernetes/admin.conf
    create: yes

- name: Wait until config file is present before continuing
  wait_for:
    path: /home/{{ std_user }}/.kube/config

# Tried Calico would have to fiddle around with ARM64 images. Flannel did not work. Had issues with flannel.1 link. Weave worked out of the box
- name: Deploy Weave SDN
  shell: 
    "kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  when: init_cluster is succeeded


- name: Enable and check kubelet service
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_kubelet